name: Deploy VMs Agent
on:
  workflow_dispatch:
    inputs:
      var_file:
        description: "Variables file (within master directory)"
        required: true
        default: "main.tf"
jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4
      
      - name: Checkout vm-test repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/vm-test
          path: vm-test
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: View master folder contents
        run: |
          ls -la ./vm-test/worker || echo "Master folder not found in vm-test repository"
      
      - name: Install OpenTofu
        run: |
          sudo snap install --classic opentofu
          tofu --version
      
      - name: Set up Kubernetes credentials
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        run: |
          sudo mkdir -p /root/.kube
          echo "$KUBE_CONFIG" | sudo tee /root/.kube/config > /dev/null
          sudo chmod 644 /root/.kube/config
      
      - name: Check OpenTofu files
        run: |
          echo "Current directory files:"
          ls -la
          echo "vm-test directory files:"
          ls -la ./vm-test
          echo "vm-test/master directory files:"
          ls -la ./vm-test/worker || echo "Master folder not found"

      - name: Download Master Outputs
        uses: actions/download-artifact@v4
        with:
          name: master-outputs
          path: ./vm-test/worker

      - name: Extract Master Info
        working-directory: ./vm-test/worker
        run: |
          echo "MASTER_IP=$(tofu output -raw master_ip)" >> $GITHUB_ENV
          echo "JOIN_TOKEN=$(tofu output -raw join_token)" >> $GITHUB_ENV

      
      - name: Initialize OpenTofu
        working-directory: ./vm-test/worker
        run: tofu init
      
      - name: Apply OpenTofu Configuration
        working-directory: ./vm-test/worker
        env:
          VM_COUNT: ${{ github.event.inputs.vm_count }}
        run: |
          tofu plan 
          tofu apply -auto-approve -var="namespace=cluster-${{ github.run_number }}" -var "master_ip=${{ env.MASTER_IP }}" -var "join_token=${{ env.JOIN_TOKEN }}"
      
      - name: Upload tfstate as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: tofu-tfstate
          path: ./vm-test/master/tofu.tfstate
