name: Deploy VMs Agent
on:
  workflow_dispatch:
    inputs:
      var_file:
        description: "Variables file (within master directory)"
        required: true
        default: "main.tf"

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4
      
      - name: Checkout vm-test repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/vm-test
          path: vm-test
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: View worker folder contents
        run: ls -la ./vm-test/worker || echo "Worker folder not found in vm-test repository"
      
      - name: Install OpenTofu
        run: |
          sudo snap install --classic opentofu
          tofu --version
      
      - name: Set up Kubernetes credentials
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        run: |
          sudo mkdir -p /root/.kube
          echo "$KUBE_CONFIG" | sudo tee /root/.kube/config > /dev/null
          sudo chmod 644 /root/.kube/config


      - name: Find latest run ID of Deploy VMs Master
        id: get-latest-run
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}  # Χρήση του νέου token
        run: |
          RUN_ID=$(gh run list --workflow "Deploy VMs Master" --json databaseId --jq '.[0].databaseId')
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV


      - name: Download Master Outputs from latest run
        uses: dawidd6/action-download-artifact@v3
        with:
          github_token: ${{ secrets.PAT_TOKEN }}
          run_id: ${{ env.RUN_ID }}
          name: master-outputs
          path: ./vm-test/worker

      - name: Extract Master Outputs
        working-directory: ./vm-test/worker
        run: |
          unzip master-outputs.zip
          cat master-outputs.env >> $GITHUB_ENV

      - name: Initialize OpenTofu
        working-directory: ./vm-test/worker
        run: tofu init
      
      - name: Apply OpenTofu Configuration
        working-directory: ./vm-test/worker
        env:
          VM_COUNT: ${{ github.event.inputs.vm_count }}
        run: |
          tofu plan 
          tofu apply -auto-approve -var="namespace=cluster-${{ github.run_number }}" -var "master_ip=${{ env.MASTER_IP }}"
          
      - name: Upload tfstate as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: tofu-tfstate
          path: ./vm-test/worker/tofu.tfstate
